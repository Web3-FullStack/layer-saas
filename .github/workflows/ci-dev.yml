name: ci-dev

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  ci:
    runs-on: ${{ matrix.os }}

    permissions:
      contents: read
      pull-requests: read

    strategy:
      matrix:
        os: [ubuntu-latest] # macos-latest, windows-latest
        node: [18]

    env:
      NUXT_UI_PRO_LICENSE: ${{ secrets.NUXT_UI_PRO_LICENSE }}

    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - name: checkout
        uses: actions/checkout@master

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            src:
              - 'app/**'
              - 'assets/**'
              - 'components/**'
              - 'composables/**'
              - 'lib/**'
              - 'modules/**'
              - 'plugins/**'
              - 'types/**'
              - 'app.config.ts'
              - 'nuxt.config.ts'
              - 'tailwind.config.ts'
              - 'package.json'
              - 'pnpm-lock.yaml'

      - name: Install dependencies
        run: pnpm install

      - name: Lint
        run: pnpm run lint

      - name: Typecheck
        run: pnpm run typecheck

      - name: Test
        run: pnpm run test run

      - name: Release Edge
        if: github.event_name == 'push' && steps.changes.outputs.src == 'true'
        run: ./.scripts/release-edge.sh
        env:
          NODE_AUTH_TOKEN: ${{secrets.NODE_AUTH_TOKEN}}
